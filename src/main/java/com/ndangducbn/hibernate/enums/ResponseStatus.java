package com.ndangducbn.hibernate.enums;

public enum ResponseStatus {
    AUTHENTICATE_FAIL(-3, "AUTHENTICATE FAIL"),
    AUTHENTICATE_REQUIRE(-2, "AUTHENTICATE REQUIRE"),
    DO_SERVICE_SUCCESSFUL(1000, "DO_SERVICE_SUCCESS"),
    DO_SERVICE_UNSUCCESS(1001, "DO_SERVICE_UNSUCESS"),
    INVALID_CLIENT(1002, "INVALID CLIENT"),
    SESSION_TIMED_OUT(1003, "SESSION TIME OUT"),
    UNHANDLED_ERROR(1004, "UNHANDLED ERROR"),
    SERVICE_NOT_FOUND(1005, "SERVICE NOT FOUND"),
    LOGIN_TOKEN_COULD_NOT_BE_CREATED(1006, "LOGIN TOKEN COULD NOT BE CREATED"),
    ILLEGAL_ARGUMENT(1007, "ILLEGAL ARGUMENT"),
    MESSAGE_INVALID(1008, "INVALID MESSAGE"),
    INVALID_REQUEST(1009, "REQUIRED FIELDS NOT FOUND"),
    REFLECTION_ERROR(1010, "CANNOT INSTANTIATE CLASS"),
    MOBILE_INVALID(1011, "MOBILE INVALID"),
    API_RESPONSE_ERROR(1012, "RESPONSE MESSAGE FROM API"),
    REQUEST_TIMEOUT(1013, "REQUEST_TIMEOUT"),
    AMOUNT_INVALID(1014, "AMOUNT_INVALID"),
    FILE_NOT_FOUND(1015, "FILE_NOT_FOUND"),
    INVALID_STATUS(1016, "INVALID_STATUS"),
    INVALID_CONFIG(1017, "INVALID CONFIG"),
    CONFIG_ERROR(1018, "READ CONFIG ERROR"),
    TASK_RUNNING(1019, "TASK IS RUNNING"),
    ENCRYPT_DECRYPT_FAILED(1020, "ENCRYPT OR DECRYPT FAILED"),
    REST_CONNECT_FAILED(1021, "CONNECTION FAILED"),
    JSON_ENCODE_DECODE_FAIL(1022, "JSON_ENCODE_DECODE_FAIL"),
    AUTHEN_USER_TYPE_NOT_FOUND(1023, "USER TYPE NOT FOUND"),
    AUTHEN_EMAIL_EXISTED(1024, "EMAIL IS EXSITED"),
    AUTHEN_MOBILE_EXISTED(1025, "MOBILE IS EXSITED"),
    AUTHEN_ADDRESS_EXISTED(1026, "ADDRESS IS EXSITED"),
    CALL_HTTP_HAS_ERROR(1027, "THE SYSTEM HAS ERROR, PLEASE TRY AGAIN LATER"),
    CUSTOMER_NOT_FOUND(1028, "CUSTOMER NOT FOUND"),
    INPUT_FIELD_INVALID(1029, "INPUT FIELD IS NOT VALIDATE"),
    DATA_NOT_FOUND(1030, "DATA_NOT_FOUND"),
    BANK_NO_SUPPORT(1031, "BANK_NO_SUPPORT"),
    CUSTOMER_TRANFER_COMMAND_NOT_FOUND(1032, "CUSTOMER TRANSFER COMMAND NOT FOUND"),
    CONTACT_NOT_FOUND(1033, "CONTACT_NOT_FOUND"),
    CONTRACT_STATUS_INVALID(1034, "CONTRACT_STATUS_INVALID"),
    OVER_LIMIT(1035, "OVER_LIMIT"),
    SALE_EXISTED(1036, "SALE_EXISTED"),
    BANK_ACCOUNT_NUMBER_IS_INVALID(640, "BANK_ACCOUNT_NUMBER_IS_INVALID"),
    BANK_ACCOUNT_NUMBER_IS_NOT_EXIST(641, "BANK_ACCOUNT_NUMBER_IS_NOT_EXIST"),
    BANK_ACCOUNT_HOLDER_IS_INVALID(642, "BANK_ACCOUNT_HOLDER_IS_INVALID"),
    BANK_ACCOUNT_DUPLICATE(643, "BANK_ACCOUNT_DUPLICATE"),
    REQ_DUPLICATE(644, "REQ_DUPLICATE"),
    BANK_SUCCESS(00, "BANK_SUCCESS"),
    SALE_NOT_FOUND(1037, "SALE_NOT_FOUND"),
    CUSTOMER_NOT_SAME_REGION(1038, "CUSTOMER_NOT_SAME_REGION"),
    CONTRACT_SERVICE_TYPE_IS_REQUIRED(1039, "CONTRACT_SERVICE_TYPE_IS_REQUIRED"),
    BUSINESS_AREA_MUST_CHOOSE_LEAST_ONE(1040, "BUSINESS_AREA_MUST_CHOOSE_LEAST_ONE"),
    AGENT_CANNOT_RESGITER_NEW_MC(1041, "CTV không thể thêm mới Merchant do chưa ký Hợp đồng"),

    ;

    public int code;
    public String message;
    private String messageFormat;

    ResponseStatus(int code, String message, String messageFormat) {
        this.code = code;
        this.message = message;
        this.messageFormat = messageFormat;
    }

    ResponseStatus(int code, String message) {
        this.code = code;
        this.message = message;
    }

    public ResponseStatus formatMessage(Object... str) {
        if (this.messageFormat != null) {
            this.message = String.format(this.messageFormat, str);
        }
        return this;
    }

    public ResponseStatus[] getListResponseStatus() {
        return ResponseStatus.values();
    }

    public int getCode() {
        return this.code;
    }

    public String getMessage() {
        return message;
    }

    public String getMessageFormat() {
        return messageFormat;
    }
}
